services:
  kafka-0:
    image: docker.io/bitnamilegacy/kafka:3.7
    container_name: kafka-0
    ports:
      - "9092"
      - "19092:19092"
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-0:9093,1@kafka-1:9093,2@kafka-2:9093
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:19092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-0:9092,EXTERNAL://localhost:19092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
    volumes:
      - kafka_0_data:/bitnamilegacy/kafka
    networks:
      - kafka-cluster
  kafka-1:
    image: docker.io/bitnamilegacy/kafka:3.7
    container_name: kafka-1
    ports:
      - "19093:19093"
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-0:9093,1@kafka-1:9093,2@kafka-2:9093
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:19093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-1:9092,EXTERNAL://localhost:19093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT

    volumes:
      - kafka_1_data:/bitnamilegacy/kafka
    networks:
      - kafka-cluster
  kafka-2:
    image: docker.io/bitnamilegacy/kafka:3.7
    container_name: kafka-2
    ports:
      - "19094:19094"
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=2
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-0:9093,1@kafka-1:9093,2@kafka-2:9093
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:19094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-2:9092,EXTERNAL://localhost:19094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
    volumes:
      - kafka_2_data:/bitnamilegacy/kafka
    networks:
      - kafka-cluster
  kafka-connect:
    image: my-kafka-connect-with-elasticsearch
    container_name: kafka-connect
    environment:
      - CONNECT_BOOTSTRAP_SERVERS=kafka-0:9092
      - CONNECT_GROUP_ID=formation
      - CONNECT_CONFIG_STORAGE_TOPIC=__formation-config
      - CONNECT_OFFSET_STORAGE_TOPIC=__formation-offsets
      - CONNECT_STATUS_STORAGE_TOPIC=__fonction-status
      - CONNECT_KEY_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - CONNECT_VALUE_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - CONNECT_INTERNAL_KEY_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - CONNECT_INTERNAL_VALUE_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - CONNECT_REST_ADVERTISED_HOST_NAME=localhost
      - CONNECT_PLUGIN_PATH=/usr/share/java,/usr/share/confluent-hub-components
      #- CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE=false
      #- CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE=false
    networks:
      - kafka-cluster
    ports:
      - "8083:8083"

  akhq:
    image: tchiotludo/akhq
    container_name: kafka-akhq
    command: |
      java -Xmx512m -Xms512m 
           -Dfile.encoding=UTF-8 -Djava.awt.headless=true 
           -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp/heapdump.log 
           -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=8686 -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false 
           -jar /app/akhq.jar
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "kafka-0:9092,kafka-1:9092,kafka-2:9092"
              schema-registry:
                url: "http://schema-registry:8085" # Adresse du Schema Registry
              kafka-connect:
                url: "http://kafka-connect:8083" # Kafka Connect URL
    depends_on:
      schema-registry:
        condition: service_healthy
    ports:
      - 8080:8080
    networks:
      - kafka-cluster

  redpanda:
    image : redpandadata/redpanda:v25.2.5
    container_name: kafka-redpanda
    ports:
      - 9090:8080
    environment:
      - KAFKA_BROKERS=kafka-0:9092,kafka-1:9092,kafka-2:9092
      - KAFKA_SCHEMAREGISTRY_ENABLED=true
      - KAFKA_SCHEMAREGISTRY_URLS=http://schema-registry:8085
      - CONNECT_ENABLED=true
      - CONNECT_CLUSTERS_NAME=cluster-connect
      - CONNECT_CLUSTERS_URL=http://kafka-connect:8083
      - LOG_LEVEL=debug
    depends_on:
      schema-registry:
        condition: service_healthy
    networks:
      - kafka-cluster

  schema-registry:
    image: confluentinc/cp-schema-registry
    container_name: schema-registry
    ports:
      - "8081:8085"
    restart: unless-stopped
    depends_on:
      - kafka-0
      - kafka-1
      - kafka-2
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'PLAINTEXT://kafka-0:9092,PLAINTEXT://kafka-1:9092'
      SCHEMA_REGISTRY_HOST_NAME: 'schema-registry'
      SCHEMA_REGISTRY_LISTENERS: 'http://0.0.0.0:8085'
      SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: 'INFO'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8085"]
      interval: 15s
      timeout: 5s
      start_period: 15s
      retries: 4
    networks:
      - kafka-cluster

  elasticsearch:
    image: bitnamilegacy/elasticsearch:9.1.2-debian-12-r0
    networks:
      - kafka-cluster
    ports:
      - "9200:9200"
    environment:
      - "discovery.type=single-node"

  kibana:
    image: bitnamilegacy/kibana:9.1.2-debian-12-r0
    networks:
      - kafka-cluster
    ports:
      - "5601:5601"
    restart: on-failure
    depends_on:
      - elasticsearch

volumes:
  kafka_0_data:
    name: kafka_0_data
    external: true
  kafka_1_data:
    name: kafka_1_data
    external: true
  kafka_2_data:
    name: kafka_2_data
    external: true
networks:
  kafka-cluster:

